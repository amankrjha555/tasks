##############################
# To calculate column number 
#############################
### Variables for sheet1 ###
# commas1 gives the no of commas prior to that column "Intern Name"
#  grep command  used to search for a string of characters in a specified sheet when it finds a match it prints the line with the result.
#  i operator is used for printing so that the terminal displays both uppercase and lowercase result. grep -i provide case insensitive search
#  the value which is placed before | worked as input for the value which is present on right side of |
# first cat the sheet 1 and grep -i name means that pick the line from the sheet and used delimeter name 
# |tr -cd , | wc -c from this count and lenth of , is determine
# col_no 1  variable declare to find the column no for Intern name from sheet 1
# commas2  gives the no of commas prior to that column "Average"
# |tr -cd , | wc -c from this count and lenth of , is determine
# col_no 2  variable declare to find the column no for Average from sheet 1


commas1=$(cat sheet1.csv|grep -i name|awk -F"Intern Name" '{print $1}'|tr -cd , | wc -c) ### Gives number of commas prior to that col. name
inc1=1
col_no1=$((commas1+inc1))

commas2=$(cat sheet1.csv|grep -i average|awk -F"Average" '{print $1}'|tr -cd , | wc -c) ### Gives number of commas prior to that col. name
inc2=1
col_no2=$((commas2+inc2))


###########################
# To calculate column number
###########################
### Variables for sheet2 ###
# commas3 gives the no of commas prior to that column "Intern Name"
#  first cat the sheet 2 and grep -i name means that pick the line from the sheet and used delimeter name
#  grep command  used to search for a string of characters in a specified sheet when it finds a match it prints the line with the result.
#  i operator is used for printing so that the terminal displays both uppercase and lowercase result. grep -i provide case insensitive search
#  the value which is placed before | worked as input for the value which is present on right side of |
# |tr -cd , | wc -c from this count and lenth of , is determine
#  col_no 3  variable declare to find the column no for Intern name from sheet 2
#  commas4  gives the no of commas prior to that column "Average"
#  |tr -cd , | wc -c from this count and lenth of , is determine
#  col_no 4  variable declare to find the column no for Average from sheet 2

commas3=$(cat sheet2.csv|grep -i name|awk -F"Intern Name" '{print $1}'|tr -cd , | wc -c) ### Gives number of commas prior to that col. name
inc3=1
col_no3=$((commas3+inc3))

commas4=$(cat sheet2.csv|grep -i average|awk -F"Average" '{print $1}'|tr -cd , | wc -c) ### Gives number of commas prior to that col. name
inc4=1
col_no4=$((commas4+inc4))

###########################
# for calculating the value multiply with average so that sum is calculated
# first cat the sheet1 to view the contents of sheet 1
# awk -F , '$1 ~ /^[0-9]+$/'  display the numeric values separate on basis of ,
#  FNR refers to the record number or  the line number in the sheet1
#  sed is the stream editor used for substitution or for find and replace
#  The sed expression s/,/ /g replaces every comma with a space character
###########################

num1=`cat sheet1.csv|awk -F , '$1 ~ /^[0-9]+$/'|awk 'FNR == 1'|sed 's/ /$/g'|sed 's/,/ /g'`
value1=0
for i in $a1
do
shopt -s nocasematch; if [[ $i == "Excellent" || $i == "poor" || $i == "Good" || $i == "Satisfactory" || $i == "Very Good" ]]
then
value1=$((value1+1))
fi
done

##############################
# for calculating the value multiply with average so that sum is calculated
# first cat the sheet1 to view the contents of sheet 1
#  awk -F , '$1 ~ /^[0-9]+$/'  display the numeric values separate on basis of ,
# FNR refers to the record number or  the line number in the sheet2
# sed is a stream editor used  for substitution or for find and replace
# The sed expression s/,/ /g replaces every comma with a space character
#############################
num2=`cat sheet2.csv|awk -F , '$1 ~ /^[0-9]+$/'|awk 'FNR == 1'|sed 's/ /$/g'|sed 's/,/ /g'`
value2=0
for i in $a1
do
shopt -s nocasematch; if [[ $i == "Excellent" || $i == "poor" || $i == "Good" || $i == "Satisfactory " || $i= "Very Good" ]]
then
value2=$((value2+1))
fi
done


